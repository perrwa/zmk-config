name: Build ZMK DFU Firmware
on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - board: raytac_mdbt50q_cx_40
            shield: corne_dongle
            artifact-name: corne_dongle

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build cmake gcc-arm-none-eabi gperf ccache dfu-util device-tree-compiler
          pip install --upgrade pip
          pip install west nrfutil

      - name: Set up Zephyr SDK and west
        run: |
          # Install Zephyr SDK
          export ZEPHYR_SDK_INSTALL_DIR=$HOME/zephyr-sdk
          wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.15.3/zephyr-sdk-0.15.3-linux-x86_64-setup.run
          chmod +x zephyr-sdk-0.15.3-linux-x86_64-setup.run
          ./zephyr-sdk-0.15.3-linux-x86_64-setup.run -- -d $ZEPHYR_SDK_INSTALL_DIR -y
          export PATH=$ZEPHYR_SDK_INSTALL_DIR/arm-zephyr-eabi/bin:$PATH

          # Initialize west workspace from your manifest
          west init -l config
          west update

          # Set environment variables for Zephyr
          export ZEPHYR_BASE=$(pwd)/config/zephyr
          west zephyr-export

      - name: Build ZMK firmware and HEX
        run: |
          source config/zephyr/zephyr-env.sh
          west build -b ${{ matrix.board }} -s zmk/app -d build/${{ matrix.artifact-name }} -- -DZMK_CONFIG=config
          west build -d build/${{ matrix.artifact-name }} -t zephyr.hex

      - name: Package DFU zip
        run: |
          mkdir -p release
          nrfutil pkg generate \
            --application build/${{ matrix.artifact-name }}/zephyr.hex \
            --hw-version 52 \
            --sd-req 0x00 \
            release/firmware-${{ matrix.artifact-name }}.zip

      - name: Upload DFU Artifact
        uses: actions/upload-artifact@v4
        with:
          name: firmware
          path: release/firmware-${{ matrix.artifact-name }}.zip
